[workspace]
resolver = "2"
members = ["crates/*"]


[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Unknown"]
license = "GPL-2.0"
description = "description"
repository = "https://github.com/akanalytics/odonata"
readme = "docs/README.md"
keywords = ["chess"]
categories = ["games"]


[workspace.dependencies]
odonata-base = { path = "./crates/odonata-base" }
odonata-hce = { path = "./crates/odonata-hce" }
arrayvec = { version = "0.7", features = ["serde"] }
bitflags = { version = "2.4.0", features = ["serde"] }
clap = { version = "4.3.2", features = ["derive"] }
once_cell = "1.7"
rand = "0.8"
rand_chacha = "0.3"
regex = "1.4"
test-log = { version = "0.2", features = ["trace"] }
anyhow = { version = "1.0", features = ["backtrace"] }
backtrace = "0.3.64"
crossbeam-utils = "0.8.8"
config = "0.14"
flexi_logger = { version = "0.27.1", features = ["colors"] }
format_num = "0.1"
hdrhist = "0.5.0"
include_dir = "0.7.2"
indexmap = { version = "2.0", features = ["serde"] }
itertools = "0.12"
log = { version = "0.4", features = ["release_max_level_debug"] }
num-traits = "0.2"
petgraph = "0.6.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.3"
static_init = "1.0"
strum = "0.26"
strum_macros = "0.26"
tabled = "0.15.0"
thread_local = "1.1.4"
toml = { version = "0.8", features = ["display", "parse", "indexmap"] }
tracing = { version = "0.1.37", features = [
    "max_level_trace",
    "release_max_level_debug",
    "log",
] }
tabwriter = "1.2.1"
append-only-vec = "0.1.3"
daisychain = { version = "0.0.5" }
console = "0.15"
xshell = "0.2"
derive_more = "0.99"
crossbeam = "0.8.2"
pariter = "0.5.1"
fslock = "0.2.1"
rayon = "1.5"
timeout-readwrite = "0.3.2"
# serde_json = "1.0"
# serde_with = "1.9"
alphanumeric-sort = "1.4.4"
chrono = { version = "0.4" }
handlebars = "4.3.5"
nom = "7.1.1"
nom-supreme = "0.8.0"
perf-event = "0.4.7"
plotters = { version = "0.3.4", default_features = false, features = [
    "svg_backend",
    "full_palette",
    "colormaps",
    "all_series",
] }
pprof = { version = "0.13.0", features = ["flamegraph"] }
serde_yaml = "0.9"
# serde_regex = "1.1.0"
statrs = "0.16.0"
url = "2.3.1"
ctrlc = "3.2.5"
glob = "0.3"
# log = { version = "0.4", features = ["release_max_level_debug"] }
argmin = { version = "0.8" }
argmin-math = { version = "0.3", features = ["ndarray_latest-nolinalg-serde"] }
liblinear = "1.0.0"
nalgebra = "0.32"
ndarray = { version = "0.15.6", features = ["rayon"] }
indicatif = { version = "0.17", features = ["rayon"] }
textplots = "0.8"
boxcar = "0.2"
postcard = { version = "1.0.8", features = ["use-std"] }
env_logger = "0.11"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
] }


[profile.dev]
opt-level = 3
incremental = true
debug = true                 # allow profiling of the  main executable 
split-debuginfo = "unpacked"
codegen-units = 256

# [profile.test]
# opt-level = 3
# incremental = true
# debug = true  # allow profiling of the  main executable 
# codegen-units = 256
# split-debuginfo = "off"  # for hotspot profiler disassembly


[profile.release]
opt-level = 3
incremental = true
codegen-units = 256
debug = true        # allow profiling of the  main executable 
# split-debuginfo = "unpacked"

# this profile purely because rustlags is used for tournament builds and this ensures they
# get placed in a seperate build directory
# avoiding rebuilds when chaging between release / tournament
# cgu32 vs 1: 4%
# fat/1cgu: 1m12s,  thin/1cgu: 30s , thin/32cgu: 32s, fat/32cgu: 1m26s
# fat vs thin: 4%
# cgu=1 => thin is off
[profile.tournament]
incremental = false
inherits = "release"
codegen-units = 16
lto = "thin"
split-debuginfo = "unpacked"

# cgu=32,  lto=n/a => fast (255M/s)
# cgu=1,   lto=n/a => perft=slow(202), search=slow(136)
# cgu=2,   lto=n/a => slow (202M/s)
# cgu=8,   lto=n/a => recompile, slow
# cgu=16,  lto=n/a => recompile, fast
# cgu=15,  lto=n/a => recompile, fast
# cgu=14,  lto=n/a => recompile, fast
# cgu=10,  lto=n/a => recompile, slow
# cgu=11,  lto=n/a => recompile, fast
# cgu=1,   lto=fat => perft=slow, search=fast(158) 
# cgu=11, lto=fat => perft=fast, search=fast(158) 
# cgu=256, lto=thin => perft=fast(251), search=fast(167)   
# cgu=256, lto=fat => perft=fast(251), search=fast(162) 
# cgu=256, lto=n/a => perft=slow(239), search=slow(129) 
# cgu=16, lto thin => perft=fast(250), search=fastish(156) ***
