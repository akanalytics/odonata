
perf report 


perf record -e task-clock,cycles,instructions,cache-references,cache-misses --call-graph dwarf -F 99  ./target/release/odonata --perft 5


# profiling
perf record -e task-clock,cycles,instructions,cache-references,cache-misses --call-graph dwarf -F 200 --output=perf.data  ./target/release/odonata --search
perf script > out.perf
../FlameGraph-1.0/stackcollapse-perf.pl out.perf > out.folded
../lameGraph-1.0/flamegraph.pl out.folded > flame.svg
file:///home/andy/code/odonata/flame.svg



cargo flamegraph --bench benchmark perft5 --bench
cargo bench hyperbola -- --profile-time 3

export RUSTFLAGS="-Ctarget-cpu=native"; cargo b --features=fast  --release


RUSTFLAGS="-Ctarget-cpu=native --emit=asm"

# build with a feature
cargo build --features fast 

# show compilation options
rustc --print cfg
rustc -C target-cpu=native --print cfg

# install musl target
 rustup target add x86_64-unknown-linux-musl


# build for statically linked musl
cargo build --release --features=fast --target x86_64-unknown-linux-musl

# check statically linked
ldd target/x86_64-unknown-linux-musl/release/odonata

# build for windows
export RUSTFLAGS="-C target-cpu=native -Ctarget-feature=+crt-static"


# tagging in git
git tag -a v0.3.23 -m "description of tag"
git push origin v0.3.23

# cachegrind to test L3 cache
export odonata_Hash=2; valgrind --tool=cachegrind ./target/release/odonata --search 100