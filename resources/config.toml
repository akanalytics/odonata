#
# Run: 210
# Training file ../output/combo.epd (500k quiet-labelled, 500k odonata tourney)
#     baseline = {
#         'eval.material': "true",
#         'eval.position': "true",
#         'eval.safety': "true",
#         'eval.mobility': "true",
#         'eval.pawn': "true",   # pawn structure is off in odonata 0.3.35
#         'eval.mb.enabled': "false",
#         'eval.phaser.method': "\"SO\"",
#         'eval.contempt_penalty.s': "-30",
#         'eval.contempt_penalty.m': "-10",
#         'eval.contempt_penalty.e': "0",
#         "tuner.ignore_draws": "false",
#         "tuner.ignore_known_outcomes": "true",
#         "tuner.ignore_endgames": "true",
#         "tuner.search_depth": "0",
#         'tuner.logistic_steepness_k.s': "4",
#         'tuner.logistic_steepness_k.m': "5",
#         'tuner.logistic_steepness_k.e': "6",
#     }
#  reg = LogisticRegression(
#    penalty="l1", solver= "liblinear", fit_intercept = True, 
#    tol=1e-4, class_weight=wt,  C=0.25, max_iter=1000, n_jobs = jobs)

# weight file:         ../output/weights-2w-king_safety_rq.toml
# Odonata version:     odonata 0.5.22 built on Thu, 14 Apr 2022 15:32:28 +0000

# Metrics
# lam                 : 4.00000
# mean_squared_error  : 0.12419
# mean_absolute_error : 0.12419
# r2_score            : 0.50221


shared_tt = true
thread_count = 1
config_filename = "config.toml"
minmax = false
feature = false

[tuner]
regression_type = "LogisticOnOutcome"
sparse = true
search_depth = 0 
ignore_known_outcomes = true
ignore_endgames = true
multi_threading_min_positions = 20000
threads = 31
logistic_steepness_k = { s = 4, e = 4 }
ignore_draws = false
consolidate = false


[ids]
enabled = true
step_size = 1

[controller]
log_dir = "."


[eval]
material           = true
position           = true
safety             = true
mobility           = true
pawn               = true


# tuned
bishop_pair               = { s =   34.15, e =   89.98 }
rook_pair                 = { s =  125.34, e =  -74.16 }
fianchetto                = { s =    0.00, e =    0.00 }
bishop_color_pawns        = { s =   -3.15, e =   -6.52 }
bishop_outposts           = { s =   29.40, e =   22.69 }
knight_forks              = { s =   -4.65, e =   73.97 }
knight_outposts           = { s =   28.90, e =   34.06 }
doubled_rooks             = { s =   45.35, e =    0.00 }
doubled_rooks_open_file   = { s =  -17.44, e =   11.47 }
enemy_pawns_on_rook_rank  = { s =  -20.55, e =    6.34 }
queen_early_develop       = { s =   -5.11, e =   26.21 }
center_attacks            = { s =    4.53, e =    3.11 }
undefended_sq             = { s =    2.67, e =    6.47 }
undefended_piece          = { s =    2.95, e =   46.80 }
trapped_piece             = { s =  -16.93, e =  -42.84 }
partially_trapped_piece   = { s =   -6.36, e =  -14.39 }
rook_open_file            = { s =   51.12, e =   -3.36 }
queen_open_file           = { s =  -26.34, e =   46.86 }
pawn_doubled              = { s =    2.81, e =  -36.36 }
pawn_directly_doubled     = { s =    0.00, e =    0.00 }
pawn_isolated             = { s =  -17.77, e =   13.71 }
semi_isolated             = { s =    0.00, e =    0.00 }
pawn_passed               = { s =   -5.10, e =  -10.54 }
pawn_passed_r7            = { s =   10.94, e =  454.27 }
pawn_passed_r6            = { s =  -27.09, e =  245.30 }
pawn_passed_r5            = { s =   -0.84, e =  105.39 }
pawn_passed_r4            = { s =  -26.05, e =   43.68 }
passers_on_rim            = { s =   11.33, e =   13.23 }
candidate_passed_pawn     = { s =    0.00, e =    0.00 }
blockaded                 = { s =   -2.39, e =  -29.29 }
blockaded_passers         = { s =    8.93, e =  -75.48 }
rooks_behind_passer       = { s =   22.65, e =    9.44 }
enemy_rook_on_passer      = { s =   13.52, e =  -78.26 }
rammed_pawns              = { s =   -0.55, e =    9.61 }
space                     = { s =    0.00, e =    0.00 }
pawn_connected_r67        = { s =   22.42, e =   25.20 }
pawn_connected_r345       = { s =   23.17, e =   15.75 }
passed_connected_r67      = { s =    0.00, e =    0.00 }
passed_connected_r345     = { s =    0.00, e =    0.00 }
pawn_duo_r67              = { s =   50.69, e =   62.75 }
pawn_duo_r2345            = { s =    8.79, e =    3.87 }
passed_duo_r67            = { s =    0.00, e =    0.00 }
passed_duo_r2345          = { s =    0.00, e =    0.00 }
backward_half_open        = { s =  -18.89, e =  -28.00 }
backward                  = { s =   -1.26, e =   -9.42 }
pawn_adjacent_shield      = { s =   11.83, e =  -13.15 }
pawn_nearby_shield        = { s =    9.16, e =  -15.12 }
king_safety_bonus         = { s =    7.93, e =   34.20 }
open_files_near_king      = { s =  -31.58, e =  -26.13 }
tropism_d1                = { s =  -35.46, e =   27.11 }
tropism_d2                = { s =  -20.95, e =    9.65 }
tropism_d3                = { s =  -10.18, e =    1.98 }
tropism_d4                = { s =   -2.32, e =    0.67 }
king_trapped_on_back_rank = { s =   12.05, e =  -54.11 }
attacks_near_king         = { s =   13.08, e =   -0.04 }
castling_rights           = { s =   43.17, e =  -17.01 }
uncastled                 = { s =  -70.25, e =    6.69 }
tempo_bonus               = { s =   28.34, e =   57.44 }
win_bonus                 = { s =  350.00, e =  600.00 }
win_metric1               = { s =    1.00, e =    1.00 }
win_metric2               = { s =    1.00, e =    1.00 }

[eval.pst]
p.a1 = { s =    0.00, e =    0.00 }
p.b1 = { s =    0.00, e =    0.00 }
p.c1 = { s =    0.00, e =    0.00 }
p.d1 = { s =    0.00, e =    0.00 }
p.e1 = { s =    0.00, e =    0.00 }
p.f1 = { s =    0.00, e =    0.00 }
p.g1 = { s =    0.00, e =    0.00 }
p.h1 = { s =    0.00, e =    0.00 }
p.a2 = { s =    0.00, e =    0.00 }
p.b2 = { s =   41.35, e =   19.00 }
p.c2 = { s =  -20.96, e =    0.00 }
p.d2 = { s =   19.62, e =  -67.50 }
p.e2 = { s =   40.40, e =  -56.62 }
p.f2 = { s =    0.00, e =  -18.94 }
p.g2 = { s =  -25.18, e =   14.46 }
p.h2 = { s =  -33.99, e =   11.93 }
p.a3 = { s =    3.08, e =   67.73 }
p.b3 = { s =   23.40, e =   55.59 }
p.c3 = { s =   32.50, e =   28.61 }
p.d3 = { s =   42.09, e =  -37.46 }
p.e3 = { s =   33.74, e =  -28.22 }
p.f3 = { s =  112.67, e =    0.00 }
p.g3 = { s =   25.78, e =   61.37 }
p.h3 = { s =  -10.42, e =   46.28 }
p.a4 = { s =   -4.84, e =   43.21 }
p.b4 = { s =    3.29, e =   37.32 }
p.c4 = { s =    1.41, e =   12.22 }
p.d4 = { s =   19.28, e =  -23.23 }
p.e4 = { s =   20.10, e =  -16.91 }
p.f4 = { s =   14.85, e =   13.39 }
p.g4 = { s =    4.53, e =   31.57 }
p.h4 = { s =  -10.38, e =   20.72 }
p.a5 = { s =  -26.80, e =   27.63 }
p.b5 = { s =  -15.11, e =   17.81 }
p.c5 = { s =    1.17, e =   -8.36 }
p.d5 = { s =   26.42, e =  -23.84 }
p.e5 = { s =   20.16, e =  -15.83 }
p.f5 = { s =    8.82, e =   -2.69 }
p.g5 = { s =    1.55, e =   13.73 }
p.h5 = { s =  -32.20, e =    0.00 }
p.a6 = { s =  -33.84, e =    4.45 }
p.b6 = { s =  -28.48, e =   10.39 }
p.c6 = { s =   -1.04, e =  -12.43 }
p.d6 = { s =   -1.70, e =   -3.01 }
p.e6 = { s =    0.80, e =    5.11 }
p.f6 = { s =  -22.40, e =   20.58 }
p.g6 = { s =   23.65, e =   -2.31 }
p.h6 = { s =   -5.49, e =  -11.09 }
p.a7 = { s =  -25.20, e =   12.68 }
p.b7 = { s =  -10.84, e =   14.88 }
p.c7 = { s =   -9.93, e =    0.00 }
p.d7 = { s =    9.98, e =   -6.59 }
p.e7 = { s =   -0.80, e =    6.46 }
p.f7 = { s =   37.21, e =   17.39 }
p.g7 = { s =   47.02, e =    4.15 }
p.h7 = { s =   -0.91, e =  -23.03 }
p.a8 = { s =    0.00, e =    0.00 }
p.b8 = { s =    0.00, e =    0.00 }
p.c8 = { s =    0.00, e =    0.00 }
p.d8 = { s =    0.00, e =    0.00 }
p.e8 = { s =    0.00, e =    0.00 }
p.f8 = { s =    0.00, e =    0.00 }
p.g8 = { s =    0.00, e =    0.00 }
p.h8 = { s =    0.00, e =    0.00 }
n.a1 = { s = -266.42, e =    0.00 }
n.b1 = { s =  -80.59, e =  -83.50 }
n.c1 = { s =  -26.71, e =    0.00 }
n.d1 = { s =  -87.92, e =   -8.11 }
n.e1 = { s =  -17.31, e =  -13.76 }
n.f1 = { s = -219.79, e =  -23.93 }
n.g1 = { s =    0.00, e =  -62.48 }
n.h1 = { s = -167.21, e =  -81.49 }
n.a2 = { s = -114.58, e =    0.00 }
n.b2 = { s =  -42.70, e =   10.73 }
n.c2 = { s =   76.23, e =  -18.36 }
n.d2 = { s =   -8.41, e =   22.84 }
n.e2 = { s =   56.04, e =   -0.71 }
n.f2 = { s =    1.03, e =    0.00 }
n.g2 = { s =  -51.08, e =  -19.33 }
n.h2 = { s =  -70.02, e =  -41.00 }
n.a3 = { s =   11.90, e =  -38.58 }
n.b3 = { s =    4.84, e =   -4.37 }
n.c3 = { s =    7.07, e =   35.88 }
n.d3 = { s =    5.88, e =   37.56 }
n.e3 = { s =   55.57, e =   18.88 }
n.f3 = { s =   23.44, e =   15.82 }
n.g3 = { s =    0.00, e =  -10.03 }
n.h3 = { s =  -67.31, e =    5.12 }
n.a4 = { s =   22.52, e =   -2.01 }
n.b4 = { s =    8.06, e =   20.46 }
n.c4 = { s =   18.92, e =   34.16 }
n.d4 = { s =   42.23, e =   33.27 }
n.e4 = { s =   -9.52, e =   28.50 }
n.f4 = { s =    6.32, e =   58.55 }
n.g4 = { s =  -34.45, e =   -1.90 }
n.h4 = { s =   31.42, e =  -19.88 }
n.a5 = { s =   -4.62, e =  -25.59 }
n.b5 = { s =    0.00, e =   25.57 }
n.c5 = { s =   38.11, e =   41.89 }
n.d5 = { s =   30.94, e =   34.21 }
n.e5 = { s =   40.68, e =   38.05 }
n.f5 = { s =   52.40, e =   -1.31 }
n.g5 = { s =   16.56, e =   19.23 }
n.h5 = { s =   -4.69, e =    0.00 }
n.a6 = { s =  -26.19, e =  -13.13 }
n.b6 = { s =   15.25, e =    1.92 }
n.c6 = { s =   29.76, e =    7.49 }
n.d6 = { s =   50.73, e =   33.85 }
n.e6 = { s =   64.43, e =   30.68 }
n.f6 = { s =   34.32, e =   14.45 }
n.g6 = { s =   37.03, e =   -6.15 }
n.h6 = { s =   -9.56, e =    0.00 }
n.a7 = { s =    0.00, e =  -30.58 }
n.b7 = { s =    0.00, e =  -27.76 }
n.c7 = { s =    4.39, e =   15.49 }
n.d7 = { s =   33.08, e =    7.12 }
n.e7 = { s =   36.71, e =   -0.78 }
n.f7 = { s =   38.33, e =    6.40 }
n.g7 = { s =   27.61, e =   42.76 }
n.h7 = { s =   27.36, e =    0.00 }
n.a8 = { s =  -54.85, e =  -33.46 }
n.b8 = { s =   -7.42, e =  -35.74 }
n.c8 = { s =  -17.56, e =    0.00 }
n.d8 = { s =    0.00, e =    0.00 }
n.e8 = { s =    0.00, e =    6.75 }
n.f8 = { s =    5.77, e =   21.29 }
n.g8 = { s =   -5.14, e =  -30.67 }
n.h8 = { s =  -42.35, e =    0.00 }
b.a1 = { s =  -35.43, e =  -23.94 }
b.b1 = { s =  -58.89, e =   -7.80 }
b.c1 = { s =    0.00, e =  -30.53 }
b.d1 = { s = -133.57, e =    5.50 }
b.e1 = { s = -187.62, e =   20.77 }
b.f1 = { s = -148.18, e =   -2.34 }
b.g1 = { s =  -71.65, e =    0.00 }
b.h1 = { s = -135.13, e =   14.05 }
b.a2 = { s =  -43.13, e =  -14.37 }
b.b2 = { s =    0.03, e =    0.00 }
b.c2 = { s =  -25.87, e =    5.80 }
b.d2 = { s =  -63.03, e =    0.00 }
b.e2 = { s =  -49.21, e =    1.16 }
b.f2 = { s =  -31.72, e =   18.89 }
b.g2 = { s =  -90.78, e =   16.43 }
b.h2 = { s =  -73.37, e =  -38.72 }
b.a3 = { s =    0.00, e =    0.00 }
b.b3 = { s =    0.00, e =    6.02 }
b.c3 = { s =   27.04, e =  -10.14 }
b.d3 = { s =   -1.76, e =   16.02 }
b.e3 = { s =    0.00, e =    0.00 }
b.f3 = { s =  -27.28, e =   32.10 }
b.g3 = { s =  -53.39, e =   23.19 }
b.h3 = { s =  -24.09, e =   13.51 }
b.a4 = { s =    0.00, e =    0.25 }
b.b4 = { s =  -12.18, e =   11.54 }
b.c4 = { s =   -0.75, e =   20.07 }
b.d4 = { s =    6.83, e =   24.52 }
b.e4 = { s =   13.73, e =   21.16 }
b.f4 = { s =  -27.15, e =   14.17 }
b.g4 = { s =   -1.39, e =  -13.44 }
b.h4 = { s =  -30.36, e =  -11.33 }
b.a5 = { s =   35.81, e =  -44.92 }
b.b5 = { s =   14.11, e =    0.18 }
b.c5 = { s =   10.49, e =   12.69 }
b.d5 = { s =   58.35, e =    6.84 }
b.e5 = { s =   50.22, e =    2.47 }
b.f5 = { s =   30.49, e =   11.48 }
b.g5 = { s =   29.13, e =   -2.02 }
b.h5 = { s =   24.29, e =  -35.52 }
b.a6 = { s =   21.00, e =  -17.92 }
b.b6 = { s =   42.67, e =    0.00 }
b.c6 = { s =   49.06, e =    7.71 }
b.d6 = { s =   28.23, e =   13.82 }
b.e6 = { s =   45.26, e =   28.82 }
b.f6 = { s =   45.54, e =    1.33 }
b.g6 = { s =   43.43, e =  -21.53 }
b.h6 = { s =   41.52, e =  -28.28 }
b.a7 = { s =   64.25, e =  -12.91 }
b.b7 = { s =   51.05, e =  -35.51 }
b.c7 = { s =   36.20, e =   -8.46 }
b.d7 = { s =   38.43, e =   -4.25 }
b.e7 = { s =   33.69, e =    0.00 }
b.f7 = { s =   58.07, e =    0.05 }
b.g7 = { s =   64.74, e =   -8.53 }
b.h7 = { s =   43.83, e =  -30.96 }
b.a8 = { s =  -14.37, e =  -16.26 }
b.b8 = { s =    5.07, e =   -9.02 }
b.c8 = { s =   30.95, e =  -35.57 }
b.d8 = { s =   21.35, e =  -10.66 }
b.e8 = { s =   47.99, e =    2.35 }
b.f8 = { s =    2.58, e =  -32.11 }
b.g8 = { s =    0.00, e =    0.00 }
b.h8 = { s =    0.00, e =  -14.55 }
r.a1 = { s =   13.51, e =   28.20 }
r.b1 = { s =    0.00, e =   22.32 }
r.c1 = { s =    0.00, e =   22.87 }
r.d1 = { s =  -14.37, e =    5.72 }
r.e1 = { s =  -63.50, e =   22.61 }
r.f1 = { s =    0.00, e =   24.62 }
r.g1 = { s =    0.00, e =   13.04 }
r.h1 = { s =    0.00, e =   20.62 }
r.a2 = { s =   41.17, e =  -10.29 }
r.b2 = { s =    3.44, e =   30.79 }
r.c2 = { s =   27.73, e =    4.12 }
r.d2 = { s =   20.98, e =    0.00 }
r.e2 = { s =  -63.99, e =   33.08 }
r.f2 = { s =    0.00, e =   20.63 }
r.g2 = { s =    0.00, e =   31.00 }
r.h2 = { s =   60.54, e =    0.00 }
r.a3 = { s =   15.66, e =    4.49 }
r.b3 = { s =   45.71, e =   -2.34 }
r.c3 = { s =   17.02, e =   -3.29 }
r.d3 = { s =   -5.55, e =    1.52 }
r.e3 = { s =  -34.81, e =    7.81 }
r.f3 = { s =  -19.38, e =    0.00 }
r.g3 = { s =    5.48, e =   13.36 }
r.h3 = { s =   -9.42, e =    0.00 }
r.a4 = { s =   -2.51, e =    2.60 }
r.b4 = { s =   -1.13, e =    2.74 }
r.c4 = { s =    8.04, e =    0.00 }
r.d4 = { s =  -33.34, e =    4.92 }
r.e4 = { s = -109.12, e =   44.32 }
r.f4 = { s =  -28.52, e =    7.15 }
r.g4 = { s =    0.00, e =    9.47 }
r.h4 = { s =    3.75, e =  -14.11 }
r.a5 = { s =   -9.77, e =  -14.44 }
r.b5 = { s =   -7.68, e =    7.43 }
r.c5 = { s =  -40.89, e =    4.38 }
r.d5 = { s =  -39.56, e =    7.08 }
r.e5 = { s =  -13.62, e =   -2.70 }
r.f5 = { s =  -17.42, e =  -18.29 }
r.g5 = { s =   54.82, e =  -14.33 }
r.h5 = { s =   30.80, e =  -44.11 }
r.a6 = { s =  -21.03, e =  -17.69 }
r.b6 = { s =  -15.82, e =  -27.16 }
r.c6 = { s =  -42.11, e =   -2.47 }
r.d6 = { s =  -22.87, e =   -6.06 }
r.e6 = { s =    0.00, e =   -7.91 }
r.f6 = { s =    9.20, e =  -21.84 }
r.g6 = { s =   44.78, e =  -33.97 }
r.h6 = { s =   30.56, e =  -60.97 }
r.a7 = { s =  -14.55, e =  -17.81 }
r.b7 = { s =   30.75, e =  -46.65 }
r.c7 = { s =    0.00, e =    1.69 }
r.d7 = { s =    0.90, e =   -9.17 }
r.e7 = { s =  -12.04, e =    0.00 }
r.f7 = { s =   12.51, e =  -26.14 }
r.g7 = { s =   68.72, e =  -35.59 }
r.h7 = { s =   -4.43, e =  -29.82 }
r.a8 = { s =   -6.81, e =   10.26 }
r.b8 = { s =   13.33, e =    0.00 }
r.c8 = { s =   13.49, e =    7.22 }
r.d8 = { s =   19.66, e =    0.00 }
r.e8 = { s =   30.22, e =   -5.49 }
r.f8 = { s =   31.24, e =   -4.99 }
r.g8 = { s =   29.53, e =  -16.51 }
r.h8 = { s =   25.34, e =  -69.52 }
q.a1 = { s =  -80.97, e =   -6.69 }
q.b1 = { s =   -5.49, e =    0.00 }
q.c1 = { s =  -61.09, e =   38.77 }
q.d1 = { s =  -28.73, e =   43.00 }
q.e1 = { s =  -32.93, e =    0.00 }
q.f1 = { s =    0.00, e =   20.57 }
q.g1 = { s =    0.00, e =    0.00 }
q.h1 = { s =  -79.00, e =   57.06 }
q.a2 = { s =  -22.26, e =   -5.98 }
q.b2 = { s =  -50.23, e =   -9.81 }
q.c2 = { s =  -81.94, e =   39.64 }
q.d2 = { s = -110.57, e =   60.07 }
q.e2 = { s = -198.37, e =  119.55 }
q.f2 = { s =  -68.46, e =  136.33 }
q.g2 = { s = -142.77, e =  139.41 }
q.h2 = { s =    0.00, e =   14.62 }
q.a3 = { s =    0.00, e =  -41.35 }
q.b3 = { s =   -6.38, e =  -11.88 }
q.c3 = { s =  -21.12, e =   25.33 }
q.d3 = { s =  -36.14, e =   25.17 }
q.e3 = { s =  -70.08, e =  123.29 }
q.f3 = { s =  -30.49, e =   41.61 }
q.g3 = { s =    0.00, e =   52.44 }
q.h3 = { s =  -64.30, e =  101.65 }
q.a4 = { s =   -0.31, e =  -10.12 }
q.b4 = { s =   -2.19, e =    0.00 }
q.c4 = { s =  -28.73, e =    0.49 }
q.d4 = { s =  -65.65, e =   32.65 }
q.e4 = { s =  -58.26, e =   50.63 }
q.f4 = { s =  -51.40, e =   73.68 }
q.g4 = { s =  -57.02, e =   95.73 }
q.h4 = { s =  -28.21, e =   47.66 }
q.a5 = { s =   21.47, e =  -16.83 }
q.b5 = { s =    0.00, e =  -15.06 }
q.c5 = { s =   19.68, e =  -27.96 }
q.d5 = { s =   -0.19, e =    0.00 }
q.e5 = { s =   10.54, e =   17.02 }
q.f5 = { s =    1.97, e =   11.90 }
q.g5 = { s =   31.69, e =    2.09 }
q.h5 = { s =   23.15, e =   19.75 }
q.a6 = { s =   18.66, e =  -51.97 }
q.b6 = { s =   44.23, e =  -75.39 }
q.c6 = { s =   30.82, e =   -5.96 }
q.d6 = { s =   34.76, e =  -28.54 }
q.e6 = { s =   27.57, e =    0.00 }
q.f6 = { s =   35.44, e =    6.04 }
q.g6 = { s =   31.30, e =   25.49 }
q.h6 = { s =   14.62, e =   18.46 }
q.a7 = { s =   33.49, e =  -20.06 }
q.b7 = { s =   40.54, e =   -3.25 }
q.c7 = { s =   48.81, e =  -26.59 }
q.d7 = { s =   51.16, e =   -7.34 }
q.e7 = { s =   58.68, e =  -21.00 }
q.f7 = { s =   75.83, e =  -56.92 }
q.g7 = { s =   69.69, e =  -36.06 }
q.h7 = { s =   43.91, e =    0.00 }
q.a8 = { s =   45.53, e =  -24.63 }
q.b8 = { s =   44.94, e =  -51.12 }
q.c8 = { s =   56.47, e =  -36.45 }
q.d8 = { s =   65.87, e =  -34.39 }
q.e8 = { s =   54.16, e =    0.00 }
q.f8 = { s =    9.57, e =  -15.72 }
q.g8 = { s =    0.00, e =  -34.46 }
q.h8 = { s =   14.50, e =  -45.19 }
k.a1 = { s =    0.00, e =  -93.37 }
k.b1 = { s =    0.00, e =  -39.45 }
k.c1 = { s =    0.00, e =  -42.70 }
k.d1 = { s =    0.00, e =  -11.00 }
k.e1 = { s =    0.00, e =   -0.49 }
k.f1 = { s =    0.00, e =    0.00 }
k.g1 = { s =    0.00, e =  -61.37 }
k.h1 = { s =    0.00, e = -137.99 }
k.a2 = { s =    0.00, e =  -26.07 }
k.b2 = { s =  136.88, e =   17.85 }
k.c2 = { s =  100.52, e =   24.15 }
k.d2 = { s =   10.03, e =   28.14 }
k.e2 = { s =   26.47, e =    5.12 }
k.f2 = { s =  232.47, e =   31.29 }
k.g2 = { s =    0.00, e =   51.05 }
k.h2 = { s =    0.00, e =  -62.63 }
k.a3 = { s =    0.00, e =  -63.73 }
k.b3 = { s =  197.37, e =    5.47 }
k.c3 = { s =   28.32, e =   46.13 }
k.d3 = { s =  249.50, e =   13.53 }
k.e3 = { s =    0.00, e =   54.62 }
k.f3 = { s =  273.84, e =   33.05 }
k.g3 = { s =   39.79, e =   54.47 }
k.h3 = { s =    0.00, e =  -24.67 }
k.a4 = { s =    0.00, e =  -80.09 }
k.b4 = { s =    0.00, e =    9.16 }
k.c4 = { s =  146.79, e =   20.97 }
k.d4 = { s =    0.00, e =   50.86 }
k.e4 = { s =    8.71, e =   48.63 }
k.f4 = { s =   58.82, e =   36.45 }
k.g4 = { s =   21.58, e =   22.98 }
k.h4 = { s = -106.33, e =  -12.47 }
k.a5 = { s =   13.79, e =  -76.24 }
k.b5 = { s =    0.00, e =   -3.95 }
k.c5 = { s =    0.00, e =   37.79 }
k.d5 = { s =    0.00, e =   47.85 }
k.e5 = { s =    0.00, e =   49.06 }
k.f5 = { s =  -19.98, e =   32.25 }
k.g5 = { s =  -40.21, e =    0.00 }
k.h5 = { s = -151.79, e =  -48.90 }
k.a6 = { s =    0.00, e =  -73.97 }
k.b6 = { s =  -13.43, e =    0.00 }
k.c6 = { s =  -30.50, e =   36.33 }
k.d6 = { s =  -92.79, e =   63.27 }
k.e6 = { s =  -85.24, e =   56.79 }
k.f6 = { s =  -18.15, e =   25.54 }
k.g6 = { s =    8.49, e =  -13.18 }
k.h6 = { s =  -40.09, e =  -54.29 }
k.a7 = { s =   -5.07, e =  -40.92 }
k.b7 = { s =  -24.69, e =    0.17 }
k.c7 = { s =  -69.60, e =   31.65 }
k.d7 = { s =  -57.31, e =   55.89 }
k.e7 = { s =  -40.70, e =   41.35 }
k.f7 = { s =    0.00, e =   22.95 }
k.g7 = { s =   10.57, e =  -23.08 }
k.h7 = { s =    4.39, e =  -61.65 }
k.a8 = { s =  -68.93, e =  -72.19 }
k.b8 = { s =  -27.14, e =  -38.88 }
k.c8 = { s =  -43.32, e =  -11.30 }
k.d8 = { s =  -71.00, e =   -8.32 }
k.e8 = { s =  -58.85, e =  -20.75 }
k.f8 = { s =  -51.22, e =  -22.39 }
k.g8 = { s =   -9.28, e =  -76.83 }
k.h8 = { s =    0.00, e = -144.86 }


# [eval.pmvt]
# b.0 = { s =  0, e = 0 }
# b.1 = { s =  0, e = 0 }
# b.2 = { s =  0, e = 0 }
# b.3 = { s =  0, e = 0 }
# b.4 = { s =  0, e = 0 }
# b.5 = { s =  0, e = 0 }
# b.6 = { s =  0, e = 0 }
# b.7 = { s =  0, e = 0 }
# b.8 = { s =  0, e = 0 }
# b.9 = { s =  0, e = 0 }
# b.10 = { s =  0, e = 0 }
# b.11 = { s =  0, e = 0 }
# b.12 = { s =  0, e = 0 }
# b.13 = { s =  0, e = 0 }
# b.14 = { s =  0, e = 0 }
# b.15 = { s =  0, e = 0 }
# b.16 = { s =  0, e = 0 }
# b.17 = { s =  0, e = 0 }
# b.18 = { s =  0, e = 0 }
# b.19 = { s =  0, e = 0 }

# n.0 = { s =  0, e = 0 }
# n.1 = { s =  0, e = 0 }
# n.2 = { s =  0, e = 0 }
# n.3 = { s =  0, e = 0 }
# n.4 = { s =  0, e = 0 }
# n.5 = { s =  0, e = 0 }
# n.6 = { s =  0, e = 0 }
# n.7 = { s =  0, e = 0 }
# n.8 = { s =  0, e = 0 }
# n.9 = { s =  0, e = 0 }
# n.10 = { s =  0, e = 0 }
# n.11 = { s =  0, e = 0 }
# n.12 = { s =  0, e = 0 }
# n.13 = { s =  0, e = 0 }
# n.14 = { s =  0, e = 0 }
# n.15 = { s =  0, e = 0 }
# n.16 = { s =  0, e = 0 }
# n.17 = { s =  0, e = 0 }
# n.18 = { s =  0, e = 0 }
# n.19 = { s =  0, e = 0 }


# r.0 = { s =  0, e = 0 }
# r.1 = { s =  0, e = 0 }
# r.2 = { s =  0, e = 0 }
# r.3 = { s =  0, e = 0 }
# r.4 = { s =  0, e = 0 }
# r.5 = { s =  0, e = 0 }
# r.6 = { s =  0, e = 0 }
# r.7 = { s =  0, e = 0 }
# r.8 = { s =  0, e = 0 }
# r.9 = { s =  0, e = 0 }
# r.10 = { s =  0, e = 0 }
# r.11 = { s =  0, e = 0 }
# r.12 = { s =  0, e = 0 }
# r.13 = { s =  0, e = 0 }
# r.14 = { s =  0, e = 0 }
# r.15 = { s =  0, e = 0 }
# r.16 = { s =  0, e = 0 }
# r.17 = { s =  0, e = 0 }
# r.18 = { s =  0, e = 0 }
# r.19 = { s =  0, e = 0 }


# q.0 = { s =  0, e = 0 }
# q.1 = { s =  0, e = 0 }
# q.2 = { s =  0, e = 0 }
# q.3 = { s =  0, e = 0 }
# q.4 = { s =  0, e = 0 }
# q.5 = { s =  0, e = 0 }
# q.6 = { s =  0, e = 0 }
# q.7 = { s =  0, e = 0 }
# q.8 = { s =  0, e = 0 }
# q.9 = { s =  0, e = 0 }
# q.10 = { s =  0, e = 0 }
# q.11 = { s =  0, e = 0 }
# q.12 = { s =  0, e = 0 }
# q.13 = { s =  0, e = 0 }
# q.14 = { s =  0, e = 0 }
# q.15 = { s =  0, e = 0 }
# q.16 = { s =  0, e = 0 }
# q.17 = { s =  0, e = 0 }
# q.18 = { s =  0, e = 0 }
# q.19 = { s =  0, e = 0 }



# [eval.attacks.p]
# p = [0.1, 0.2]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.n]
# p = [0.0, 0.3]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.b]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.r]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.q]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.k]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.p]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.n]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.b]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.r]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.q]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.k]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# attacks.p.p               = [   0,   0]
# defends.p.p               = [   8.68,   11.21]
# attacks.p.n               = [  10.64,    8.40]
# defends.p.n               = [   8.19,   15.23]
# attacks.p.b               = [  10.28,   12.50]
# defends.p.b               = [   9.47,   10.94]
# attacks.p.r               = [  14.52,   11.58]
# defends.p.r               = [   7.76,    9.05]
# attacks.p.q               = [   8.42,   13.97]
# defends.p.q               = [   8.65,    8.79]
# attacks.p.k               = [   8.52,   12.53]
# defends.p.k               = [   8.98,   10.90]
# attacks.n.p               = [  -5.61,  -10.47]
# defends.n.p               = [  -0.24,   12.19]
# attacks.n.n               = [   8.36,    8.02]
# defends.n.n               = [   4.76,    4.81]
# attacks.n.b               = [  42.29,   42.49]
# defends.n.b               = [   5.67,    1.58]
# attacks.n.r               = [ 105.87,    6.41]
# defends.n.r               = [   8.00,   -3.61]
# attacks.n.q               = [  49.43,   -0.50]
# defends.n.q               = [   9.91,  -18.53]
# attacks.n.k               = [ 187.11,   -9.77]
# defends.n.k               = [   4.88,   -0.39]
# attacks.b.p               = [  -5.84,   -7.82]
# defends.b.p               = [   3.84,    2.11]
# attacks.b.n               = [  26.01,   29.04]
# defends.b.n               = [  11.25,   22.76]
# attacks.b.b               = [  10.61,   10.38]
# defends.b.b               = [  12.94,    7.63]
# attacks.b.r               = [  67.62,   -8.06]
# defends.b.r               = [   1.84,   18.60]
# attacks.b.q               = [  91.87,   11.12]
# defends.b.q               = [  15.07,    1.44]
# attacks.b.k               = [  91.04,   73.46]
# defends.b.k               = [   7.57,    2.30]
# attacks.r.p               = [ -11.63,    0.91]
# defends.r.p               = [  -9.15,    9.73]
# attacks.r.n               = [   3.06,   17.31]
# defends.r.n               = [   8.15,   19.15]
# attacks.r.b               = [  20.48,    5.23]
# defends.r.b               = [  12.57,   17.38]
# attacks.r.r               = [  11.14,   11.35]
# defends.r.r               = [   1.14,   13.71]
# attacks.r.q               = [  99.04,  -17.16]
# defends.r.q               = [  15.97,   24.39]
# attacks.r.k               = [ 268.09,  -25.06]
# defends.r.k               = [  11.53,   -6.96]
# attacks.q.p               = [  -0.74,   -8.18]
# defends.q.p               = [   2.72,   -0.02]
# attacks.q.n               = [   0.22,    2.63]
# defends.q.n               = [   9.58,   10.15]
# attacks.q.b               = [   1.41,   26.16]
# defends.q.b               = [   5.03,   16.53]
# attacks.q.r               = [  11.43,  -34.40]
# defends.q.r               = [   2.11,    8.43]
# attacks.q.q               = [  11.38,   10.63]
# defends.q.q               = [-239.84, -145.59]
# attacks.q.k               = [  97.67,  115.74]
# defends.q.k               = [  -4.67,  -24.98]
# attacks.k.p               = [  12.76,   15.32]
# defends.k.p               = [  12.74,   11.81]
# attacks.k.n               = [  11.42,   11.58]
# defends.k.n               = [  11.65,   11.75]
# attacks.k.b               = [  12.21,    8.58]
# defends.k.b               = [  12.68,    8.58]
# attacks.k.r               = [  11.11,   12.00]
# defends.k.r               = [  11.16,   12.59]
# attacks.k.q               = [  12.02,   11.71]
# defends.k.q               = [   9.32,   14.62]
# attacks.k.k               = [  11.86,   12.76]    
# defends.k.k               = [  10.60,   0

[eval.mb]
enabled = false
filename = ""
consistency_report = true
consistency_adjust = true
internal_stats = false
draws_only = false
min_games = 50
max_pawns = 5
trade_factor = 2
p = { s =  100.00, e =  186.71 }
n = { s =  492.09, e =  460.00 }
b = { s =  507.71, e =  512.64 }
r = { s =  536.82, e =  976.96 }
q = { s = 1348.28, e = 1651.20 }


[eval.mb.balances]
NKk = 0
BKk = 0


[eval.phaser]
enabled = true
method = "SO"
half_way_score = 3200


[aspiration]
enabled = true
fail_soft = true
change_both_bounds = false
min_depth = 4
window = 100
max_window = 1200
max_iter = 16
multiplier1 = 4.0
multiplier2 = 4.0


[qsearch]
enabled = true
only_on_capture = false
promos = false
ignore_see_fails = true
see_cutoff = 1
max_ply = 10
coarse_delta_prune = 1000
switches = 1279

[nmp]
enabled = true
recursive = true
successive = true
margin = -10000
min_depth = 2
depth_reduction_strat = 100
store_tt = true
a = 2.7
b = 0.198
c = 0.00017


[razor]
enabled = true
max_depth = 3
min_opponents = 4
pv_nodes = false
margin1 = 94
margin2 = 381
margin3 = 873
move_types_forbidden = 994

[futility]
alpha_enabled = true
beta_enabled = false
prune_remaining = false
avoid_in_check = false
avoid_giving_check = true
first_move = false
avoid_promos = false
promo_margin = false
max_depth = 2
max_depth_captures = 2
margin_qs = 0
margin1 = 100
margin2 = 250
margin3 = 1500
eval_switches = 255
move_types_forbidden = 0

[results]
take_move_from_part_ply = false

[pvs]
enabled = true
min_depth = 2

[ext]
enabled = true
max_extend = 1

gives_check_enabled = true
in_check_enabled = false
check_max_depth = 2
check_max_phase = 100
check_only_captures = false
check_see = false
check_see_threshold = 0

promo_enabled = false
promo_max_depth = 1
near_promo_enabled = false
near_promo_max_depth = 1

recapture_enabled = false
recapture_same_square = true
recapture_only_pv_node = false
recapture_max_depth = 1

pv_enabled = false

[lmp]
enabled = true
first_move = false
bad_captures = false
promos = false
killers = false
in_check = false
gives_check = false
pawns = true
extensions = false
a = 4.07
b = 0.33
c = 1.56
pa = 5.63
pb = 1.18
pc = 1.28

[lmr]
enabled = true
first_move = false
only_nt_all = false
bad_captures = true
pawns = true
promos = false
killers = false
in_check = false
gives_check = false
quiets1 = 20
quiets2 = 35
reduce_1_at_depth = 3
reduce_2_at_depth = 7
reduce_3_at_depth = 13
reduce_4_at_depth = 17
pv_reduce = 0
bad_captures_reduce = 0
# move_number = 5
re_search = false
alpha_numeric = false
beta_numeric = false
extensions = false

[mte]
# 0.5.1
# move_overhead_ms = 0
# branching_factor = 12.625
# moves_rem = 8

# 0.5.5
# branching_factor = 4.01
# moves_rem = 11
# move_overhead_ms = 7

# 0.5.6
# branching_factor = 5.01
# moves_rem = 12
# move_overhead_ms = 0
# use_last_2_iters=false

move_overhead_ms = 0
branching_factor = 5.01
moves_rem = 12
use_last_2_iters = false

min_ply_for_estimation = 3
perc_of_time_adv = 62
deterministic = false
nodestime = 0
check_every = 128

[move_orderer]
enabled = true
prior_pv = true
prior_bm = false
tt_bm = true
mvv_lva = true
see_cutoff = 0
order = ["Start", "Hash", "Initialize", "GoodCaptureUpfrontSorted", "Killer", "Promo", "Quiet", "BadCapture", "End"]
qorder = ["Start", "Initialize", "GoodCapture", "End"]
qorder_evasions = ["Start", "Initialize", "Evasion", "End"]

[repetition]
enabled = true
avoid_tt_on_repeats = false

[tt]
enabled = true
aging = true
use_tt_for_pv = false
use_tt_for_eval = false
allow_truncated_pv = true
buckets = 2
aligned = false
mb = 8
hmvc_horizon = 85
min_ply = 1
min_depth = 1
rewrite_pv = true
freshen_on_fetch = true
replacement = "AgeTypeDepth"
preserve_bm = false

[killers]
enabled = true
clear_every_move = false
use_ply_below = true

[history]
enabled = true
scale = 1
age_factor = 4
malus_factor = 10
board = "PieceTo"
alpha_method = "Squared"
beta_method = "Squared"
duff_method = "Squared"
score_method = "GoodOverGoodAndBad"

[explainer]
enabled = false
is_explaining = false
min_depth = 0
max_additional_ply = 4


[restrictions]
enabled = true
multi_pv_count = 1

[recognizer]
enabled = true
min_depth = -100
terminal_depth = 2



#end of file
