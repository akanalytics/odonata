#
# Run: 32
# MSE improved from 0.086656 to 0.086656 (-0.00%)
# MSE improved from 0.086656 to 0.086664 (0.01%) using integer weights
# Training file ../output/combo.epd (500k quiet-labelled, 500k odonata tourney)
# Odonata odonata 0.4.13 built on Fri, 12 Nov 2021 10:56:48 +0000
# Path ../engines/odonata/odonata-stable
# Completed... 52.4 M position evaluations per second (73407 recalcs x 1050124 file lines)
# 
# # fixed {suffix}
# 

# baseline

# eval.material = true
# eval.position = true
# eval.safety = true
# eval.mobility = true
# eval.pawn = true
# eval.mb.enabled = false
# eval.phaser.method = "SO"
# eval.contempt_penalty.s = -30
# eval.contempt_penalty.m = -10
# eval.contempt_penalty.e = 0
# tuner.ignore_draws = false
# tuner.logistic_steepness_k.s = 4
# tuner.logistic_steepness_k.m = 5
# tuner.logistic_steepness_k.e = 6


shared_tt = true
thread_count = 1
config_filename = "config.toml"
minmax = false

[tuner]
ignore_known_outcomes = true
multi_threading_min_positions = 20000
logistic_steepness_k = { s = 4, e = 4 }
ignore_draws = false


[ids]
enabled = true
part_ply = false
step_size = 1


[eval]
material           = true
position           = true
safety             = true
mobility           = true
pawn               = true


# tuned
bishop_pair              = { s =   18.06, e =   97.60 }
fianchetto               = { s =   55.07, e =   43.04 }
bishop_color_pawns       = { s =   -2.63, e =   -7.86 }
bishop_outposts          = { s =   27.44, e =   25.11 }
knight_forks             = { s =    1.27, e =   44.09 }
knight_outposts          = { s =   26.35, e =   50.90 }
rook_pair                = { s = -116.86, e =   41.75 }
rook_open_file           = { s =   32.85, e =    6.82 }
doubled_rooks            = { s =   27.50, e =   -1.72 }
doubled_rooks_open_file  = { s =    4.74, e =    2.36 }
enemy_pawns_on_rook_rank = { s =  -17.70, e =   12.01 }
rooks_behind_passer      = { s =   -5.53, e =   44.25 }
queen_open_file          = { s =  -14.71, e =   30.90 }
queen_early_develop      = { s =   -6.23, e =  -29.94 }
pawn_doubled             = { s =   -5.23, e =   -7.69 }
pawn_isolated            = { s =  -25.98, e =  -17.79 }
pawn_passed              = { s =  -20.89, e =   69.82 }
pawn_passed_r6           = { s =   77.81, e =  167.79 }
pawn_passed_r5           = { s =   43.97, e =   53.32 }
passers_on_rim           = { s =   11.22, e =   12.16 }
blockaded                = { s =    1.71, e =  -39.82 }
blockaded_passers        = { s =  -15.13, e =  -60.36 }
space                    = { s =   -2.97, e =   -2.69 }
rammed_pawns             = { s =    1.51, e =    8.76 }
tropism_d1               = { s =  -30.34, e =   27.57 }
tropism_d2               = { s =  -19.87, e =   11.68 }
tropism_d3               = { s =   -8.20, e =    4.29 }
pawn_adjacent_shield     = { s =   26.73, e =  -14.08 }
pawn_nearby_shield       = { s =   25.51, e =  -12.64 }
open_files_near_king     = { s =   -4.04, e =   -2.72 }
attacks_near_king        = { s =   11.88, e =   -2.45 }
castling_rights          = { s =    4.49, e =   -2.37 }
undefended_sq            = { s =    2.08, e =    4.35 }
center_attacks           = { s =    4.31, e =    0.77 }
undefended_piece         = { s =    2.05, e =   49.22 }
trapped_piece            = { s =  -10.17, e =  -50.57 }
partially_trapped_piece  = { s =   -4.49, e =  -18.99 }
tempo_bonus              = { s =   18.08, e =   30.32 }


win_bonus                = { s =  250.00, e =  250.00 }

[eval.pst]
p.a1 = { s =   11.47, e =   11.89 }
p.a2 = { s =  301.81, e =  255.06 }
p.a3 = { s =   21.84, e =   45.67 }
p.a4 = { s =    9.59, e =   30.35 }
p.a5 = { s =   -8.30, e =   17.30 }
p.a6 = { s =  -13.09, e =  -14.21 }
p.a7 = { s =   -6.62, e =   -3.60 }
p.a8 = { s =    9.87, e =   10.21 }
p.b1 = { s =   11.04, e =   14.83 }
p.b2 = { s =  184.63, e =  346.99 }
p.b3 = { s =    2.60, e =   50.24 }
p.b4 = { s =   -1.36, e =   23.90 }
p.b5 = { s =  -14.96, e =    4.77 }
p.b6 = { s =  -18.51, e =  -11.22 }
p.b7 = { s =  -18.56, e =    0.86 }
p.b8 = { s =   11.10, e =   14.10 }
p.c1 = { s =    8.72, e =   10.37 }
p.c2 = { s =  115.61, e =  351.00 }
p.c3 = { s =   -9.15, e =   36.05 }
p.c4 = { s =  -11.44, e =   23.70 }
p.c5 = { s =   -1.70, e =    0.26 }
p.c6 = { s =    1.54, e =  -19.49 }
p.c7 = { s =  -12.26, e =  -19.95 }
p.c8 = { s =    8.56, e =   11.91 }
p.d1 = { s =    5.49, e =    9.21 }
p.d2 = { s =  226.57, e =  255.37 }
p.d3 = { s =    9.55, e =  -35.33 }
p.d4 = { s =   12.64, e =  -12.83 }
p.d5 = { s =   17.90, e =  -18.23 }
p.d6 = { s =   -1.04, e =   -7.77 }
p.d7 = { s =   -8.80, e =  -35.02 }
p.d8 = { s =   10.19, e =    8.55 }
p.e1 = { s =   12.57, e =   12.39 }
p.e2 = { s =  201.94, e =  243.06 }
p.e3 = { s =   18.66, e =  -24.12 }
p.e4 = { s =    3.53, e =   -4.61 }
p.e5 = { s =    2.62, e =   -5.84 }
p.e6 = { s =   -1.52, e =    1.39 }
p.e7 = { s =  -11.78, e =    0.98 }
p.e8 = { s =   10.83, e =    9.87 }
p.f1 = { s =    8.31, e =   10.13 }
p.f2 = { s =   50.74, e =  331.46 }
p.f3 = { s =   95.81, e =  -11.65 }
p.f4 = { s =    5.06, e =   14.78 }
p.f5 = { s =    1.90, e =    5.93 }
p.f6 = { s =  -19.83, e =   19.53 }
p.f7 = { s =   17.12, e =   17.78 }
p.f8 = { s =   11.09, e =   10.77 }
p.g1 = { s =    7.61, e =   10.38 }
p.g2 = { s =   15.14, e =  338.54 }
p.g3 = { s =   39.48, e =   -0.99 }
p.g4 = { s =  -13.22, e =   17.81 }
p.g5 = { s =  -28.72, e =   16.69 }
p.g6 = { s =   -0.10, e =   -1.46 }
p.g7 = { s =   16.60, e =   -1.85 }
p.g8 = { s =    7.26, e =   14.46 }
p.h1 = { s =    7.47, e =   14.38 }
p.h2 = { s =  214.39, e =  229.28 }
p.h3 = { s =   -4.72, e =    8.36 }
p.h4 = { s =    6.22, e =    8.15 }
p.h5 = { s =  -16.40, e =   -1.55 }
p.h6 = { s =    3.39, e =   -6.45 }
p.h7 = { s =   -3.39, e =  -32.80 }
p.h8 = { s =   10.13, e =   12.60 }
n.a1 = { s = -215.63, e =    2.78 }
n.a2 = { s = -135.03, e =    7.19 }
n.a3 = { s =    9.43, e =  -71.47 }
n.a4 = { s =  -12.93, e =  -20.30 }
n.a5 = { s =  -25.01, e =  -48.40 }
n.a6 = { s =  -43.45, e =  -55.64 }
n.a7 = { s =   -9.22, e =  -75.29 }
n.a8 = { s =  -63.17, e = -141.92 }
n.b1 = { s = -182.48, e =   -3.33 }
n.b2 = { s =  -70.15, e =    4.04 }
n.b3 = { s =  -14.85, e =  -17.13 }
n.b4 = { s =  -16.41, e =    3.56 }
n.b5 = { s =  -19.29, e =  -11.36 }
n.b6 = { s =    2.57, e =  -25.15 }
n.b7 = { s =   -6.47, e =  -58.37 }
n.b8 = { s =  -24.53, e =  -20.18 }
n.c1 = { s =  -70.64, e =   -0.56 }
n.c2 = { s =   40.76, e =  -37.53 }
n.c3 = { s =    0.94, e =    8.65 }
n.c4 = { s =    4.92, e =   20.93 }
n.c5 = { s =   12.51, e =   28.43 }
n.c6 = { s =    0.02, e =   -8.96 }
n.c7 = { s =  -12.39, e =  -17.31 }
n.c8 = { s =  -27.36, e =  -25.69 }
n.d1 = { s =  -82.04, e =    1.27 }
n.d2 = { s =   -2.26, e =    0.58 }
n.d3 = { s =   -0.94, e =   13.42 }
n.d4 = { s =   14.17, e =   16.48 }
n.d5 = { s =    5.23, e =   25.77 }
n.d6 = { s =   32.01, e =   13.04 }
n.d7 = { s =    9.41, e =  -24.69 }
n.d8 = { s =  -21.32, e =  -37.49 }
n.e1 = { s =    3.29, e =  -42.39 }
n.e2 = { s =   50.63, e =  -37.35 }
n.e3 = { s =   76.43, e =    1.83 }
n.e4 = { s =  -26.14, e =   14.95 }
n.e5 = { s =   13.99, e =   22.36 }
n.e6 = { s =   44.63, e =   -6.39 }
n.e7 = { s =   15.46, e =  -29.40 }
n.e8 = { s =  -22.71, e =  -28.61 }
n.f1 = { s = -221.40, e =  -52.92 }
n.f2 = { s =    8.08, e =  -17.41 }
n.f3 = { s =   12.09, e =  -14.24 }
n.f4 = { s =    4.41, e =   29.73 }
n.f5 = { s =   20.00, e =   -7.75 }
n.f6 = { s =   11.60, e =    1.05 }
n.f7 = { s =   20.11, e =  -46.79 }
n.f8 = { s =   -6.24, e =  -24.19 }
n.g1 = { s =    7.39, e =    2.76 }
n.g2 = { s =  -62.97, e =  -40.93 }
n.g3 = { s =  -18.57, e =  -32.75 }
n.g4 = { s =  -38.73, e =  -41.38 }
n.g5 = { s =  -10.04, e =   -1.08 }
n.g6 = { s =   10.64, e =  -28.63 }
n.g7 = { s =   16.74, e =    5.68 }
n.g8 = { s =  -17.79, e =    1.81 }
n.h1 = { s =  -71.73, e = -148.20 }
n.h2 = { s = -115.13, e =  -63.81 }
n.h3 = { s =  -76.60, e =  -16.65 }
n.h4 = { s =   17.80, e =  -57.11 }
n.h5 = { s =   -7.72, e =  -28.58 }
n.h6 = { s =  -32.24, e =  -16.13 }
n.h7 = { s =   20.39, e =  -46.43 }
n.h8 = { s =  -81.69, e =    1.38 }
b.a1 = { s =  -15.37, e =    0.86 }
b.a2 = { s =  -74.43, e =    0.89 }
b.a3 = { s =   -9.89, e =   -4.14 }
b.a4 = { s =   -0.75, e =   -4.60 }
b.a5 = { s =   11.95, e =  -53.49 }
b.a6 = { s =  -16.62, e =    3.32 }
b.a7 = { s =   62.91, e =    1.23 }
b.a8 = { s =  -52.16, e =    1.18 }
b.b1 = { s =   43.00, e =  -36.60 }
b.b2 = { s =  -24.20, e =   13.19 }
b.b3 = { s =   18.83, e =   10.03 }
b.b4 = { s =  -26.14, e =   16.69 }
b.b5 = { s =    7.92, e =   -6.87 }
b.b6 = { s =   23.66, e =   -0.67 }
b.b7 = { s =    9.62, e =   -2.43 }
b.b8 = { s =   -4.87, e =  -55.03 }
b.c1 = { s =   55.23, e =    5.27 }
b.c2 = { s =  -42.78, e =   16.71 }
b.c3 = { s =   -3.52, e =   -1.43 }
b.c4 = { s =  -25.56, e =   27.52 }
b.c5 = { s =  -14.43, e =    6.10 }
b.c6 = { s =   13.69, e =   24.89 }
b.c7 = { s =    9.00, e =   -5.35 }
b.c8 = { s =    6.97, e =   26.48 }
b.d1 = { s =  -37.29, e =   10.98 }
b.d2 = { s =  -33.23, e =   -5.71 }
b.d3 = { s =   10.41, e =   20.43 }
b.d4 = { s =    5.85, e =   24.09 }
b.d5 = { s =   44.05, e =   11.66 }
b.d6 = { s =    5.59, e =    8.40 }
b.d7 = { s =   15.42, e =    0.85 }
b.d8 = { s =    4.82, e =  -21.99 }
b.e1 = { s = -114.61, e =   22.52 }
b.e2 = { s =  -62.57, e =   19.90 }
b.e3 = { s =  -23.15, e =   16.37 }
b.e4 = { s =   -1.34, e =   32.23 }
b.e5 = { s =   20.68, e =   -1.94 }
b.e6 = { s =   21.55, e =   29.96 }
b.e7 = { s =    5.04, e =    1.29 }
b.e8 = { s =   46.21, e =  -17.09 }
b.f1 = { s =  -96.46, e =   24.66 }
b.f2 = { s =  -31.13, e =   25.60 }
b.f3 = { s =  -12.52, e =   27.18 }
b.f4 = { s =  -21.43, e =   29.89 }
b.f5 = { s =   14.10, e =    7.24 }
b.f6 = { s =   11.67, e =    1.16 }
b.f7 = { s =   34.10, e =  -10.96 }
b.f8 = { s =  -20.38, e =    6.20 }
b.g1 = { s =   67.96, e =  -53.96 }
b.g2 = { s =  -58.54, e =   21.72 }
b.g3 = { s =  -40.98, e =   24.75 }
b.g4 = { s =  -11.72, e =  -16.71 }
b.g5 = { s =   10.62, e =  -13.22 }
b.g6 = { s =   19.85, e =    0.33 }
b.g7 = { s =   18.76, e =    1.26 }
b.g8 = { s =    2.51, e =  -28.95 }
b.h1 = { s =  -89.42, e =  -12.58 }
b.h2 = { s = -127.00, e =  -27.59 }
b.h3 = { s =  -36.22, e =   18.44 }
b.h4 = { s =  -32.07, e =  -14.06 }
b.h5 = { s =    9.71, e =  -47.37 }
b.h6 = { s =   13.10, e =  -21.07 }
b.h7 = { s =   37.02, e =  -52.53 }
b.h8 = { s =  -50.38, e =  -10.81 }
r.a1 = { s =   39.96, e =   15.53 }
r.a2 = { s =   22.90, e =   -1.22 }
r.a3 = { s =    2.11, e =    6.47 }
r.a4 = { s =   -3.39, e =    9.91 }
r.a5 = { s =   -4.84, e =   -1.39 }
r.a6 = { s =  -13.51, e =  -15.27 }
r.a7 = { s =  -22.47, e =  -15.94 }
r.a8 = { s =   -5.83, e =    1.08 }
r.b1 = { s =    2.62, e =   22.92 }
r.b2 = { s =   18.23, e =   12.56 }
r.b3 = { s =   53.42, e =   -4.64 }
r.b4 = { s =  -13.91, e =    8.27 }
r.b5 = { s =   -7.94, e =    5.51 }
r.b6 = { s =  -33.87, e =  -16.69 }
r.b7 = { s =   12.19, e =  -42.83 }
r.b8 = { s =    0.35, e =   -0.59 }
r.c1 = { s =   37.70, e =   11.36 }
r.c2 = { s =   17.99, e =   13.88 }
r.c3 = { s =   30.81, e =    0.86 }
r.c4 = { s =    0.78, e =   17.28 }
r.c5 = { s =  -34.25, e =    6.43 }
r.c6 = { s =  -52.25, e =    3.71 }
r.c7 = { s =    0.91, e =  -10.73 }
r.c8 = { s =   -2.05, e =    4.92 }
r.d1 = { s =    3.79, e =   13.97 }
r.d2 = { s =   37.95, e =   12.33 }
r.d3 = { s =    2.23, e =   15.57 }
r.d4 = { s =  -21.03, e =   14.14 }
r.d5 = { s =  -23.63, e =    2.22 }
r.d6 = { s =  -31.96, e =    0.42 }
r.d7 = { s =   -8.69, e =   -4.17 }
r.d8 = { s =   -0.63, e =    1.04 }
r.e1 = { s =  -36.09, e =   34.25 }
r.e2 = { s =  -23.86, e =   40.00 }
r.e3 = { s =  -23.84, e =   20.80 }
r.e4 = { s =  -92.34, e =   65.65 }
r.e5 = { s =  -21.82, e =    3.89 }
r.e6 = { s =   -6.62, e =    1.06 }
r.e7 = { s =  -27.84, e =    0.98 }
r.e8 = { s =    6.19, e =    1.03 }
r.f1 = { s =  109.69, e =    9.45 }
r.f2 = { s =   69.73, e =   11.21 }
r.f3 = { s =    6.49, e =   21.80 }
r.f4 = { s =    1.49, e =   15.17 }
r.f5 = { s =  -33.63, e =   -6.36 }
r.f6 = { s =  -16.82, e =    0.87 }
r.f7 = { s =  -14.59, e =   -0.50 }
r.f8 = { s =    9.11, e =    1.07 }
r.g1 = { s =   11.62, e =   21.41 }
r.g2 = { s =   18.97, e =   18.98 }
r.g3 = { s =    7.10, e =   10.37 }
r.g4 = { s =   -1.08, e =   12.31 }
r.g5 = { s =   34.96, e =   -2.45 }
r.g6 = { s =    1.50, e =   -7.20 }
r.g7 = { s =    1.35, e =  -16.08 }
r.g8 = { s =   -8.72, e =    1.09 }
r.h1 = { s =    1.49, e =   26.63 }
r.h2 = { s =   46.97, e =   -5.79 }
r.h3 = { s =  -28.62, e =    0.82 }
r.h4 = { s =   -3.87, e =  -14.32 }
r.h5 = { s =    3.54, e =  -36.26 }
r.h6 = { s =  -13.21, e =  -38.95 }
r.h7 = { s =  -40.97, e =  -14.73 }
r.h8 = { s =   -6.65, e =  -22.42 }
q.a1 = { s =  -46.40, e =  -14.29 }
q.a2 = { s =  -52.52, e =   -8.46 }
q.a3 = { s =  -25.08, e =  -38.18 }
q.a4 = { s =  -28.77, e =    2.18 }
q.a5 = { s =   -0.40, e =   -0.49 }
q.a6 = { s =  -12.81, e =  -20.17 }
q.a7 = { s =   -1.13, e =    1.06 }
q.a8 = { s =   12.98, e =  -16.46 }
q.b1 = { s =    8.22, e =   -1.21 }
q.b2 = { s =  -64.78, e =    0.95 }
q.b3 = { s =  -14.06, e =  -18.75 }
q.b4 = { s =  -12.98, e =   -0.46 }
q.b5 = { s =  -30.19, e =   -0.23 }
q.b6 = { s =    0.32, e =  -32.96 }
q.b7 = { s =    6.36, e =    1.71 }
q.b8 = { s =    3.28, e =  -52.23 }
q.c1 = { s =    3.06, e =   13.24 }
q.c2 = { s =  -71.82, e =   19.08 }
q.c3 = { s =  -41.81, e =   32.70 }
q.c4 = { s =  -39.46, e =   28.47 }
q.c5 = { s =  -14.87, e =   -2.78 }
q.c6 = { s =    0.46, e =    0.98 }
q.c7 = { s =    5.71, e =    0.86 }
q.c8 = { s =    7.74, e =    2.31 }
q.d1 = { s =   -0.25, e =   24.32 }
q.d2 = { s =  -55.65, e =   18.96 }
q.d3 = { s =  -26.52, e =    2.46 }
q.d4 = { s =  -64.77, e =   28.10 }
q.d5 = { s =  -31.63, e =    5.70 }
q.d6 = { s =   -7.15, e =    2.51 }
q.d7 = { s =    8.04, e =    0.83 }
q.d8 = { s =   12.11, e =    0.92 }
q.e1 = { s =   -1.00, e =  -16.30 }
q.e2 = { s =  -84.73, e =   20.84 }
q.e3 = { s =  -48.58, e =  109.71 }
q.e4 = { s =  -36.88, e =   17.12 }
q.e5 = { s =  -24.18, e =   24.05 }
q.e6 = { s =   -7.52, e =   -0.44 }
q.e7 = { s =   15.40, e =  -19.23 }
q.e8 = { s =   16.88, e =    0.55 }
q.f1 = { s =    5.97, e =   13.83 }
q.f2 = { s =  -30.41, e =   58.26 }
q.f3 = { s =   -8.11, e =    1.10 }
q.f4 = { s =  -34.48, e =   33.59 }
q.f5 = { s =  -29.89, e =    3.95 }
q.f6 = { s =    5.68, e =   -1.01 }
q.f7 = { s =   22.21, e =  -53.36 }
q.f8 = { s =  -14.46, e =  -34.76 }
q.g1 = { s =  117.29, e =  -10.99 }
q.g2 = { s =  -92.74, e =   97.52 }
q.g3 = { s =    1.09, e =   39.56 }
q.g4 = { s =  -26.59, e =   48.63 }
q.g5 = { s =   -3.70, e =    0.78 }
q.g6 = { s =   -2.01, e =    5.14 }
q.g7 = { s =   -2.34, e =  -12.62 }
q.g8 = { s =  -48.88, e =    0.49 }
q.h1 = { s =   77.01, e =   26.21 }
q.h2 = { s =   37.61, e =   -0.29 }
q.h3 = { s =  -62.97, e =   54.47 }
q.h4 = { s =  -38.21, e =    3.16 }
q.h5 = { s =   -3.99, e =   13.43 }
q.h6 = { s =  -18.94, e =    5.44 }
q.h7 = { s =    3.29, e =    1.53 }
q.h8 = { s =  -37.87, e =  -55.82 }
k.a1 = { s =    8.96, e = -112.47 }
k.a2 = { s =    7.51, e =   16.03 }
k.a3 = { s =   34.70, e =  -15.78 }
k.a4 = { s =   19.88, e =  -39.72 }
k.a5 = { s =  110.13, e =  -78.48 }
k.a6 = { s = -102.21, e =   -0.37 }
k.a7 = { s =   -0.80, e =   -6.32 }
k.a8 = { s =  -96.32, e =    1.16 }
k.b1 = { s =    6.93, e =  -44.76 }
k.b2 = { s =  154.12, e =   -1.55 }
k.b3 = { s =   48.56, e =   32.88 }
k.b4 = { s =   76.18, e =    5.27 }
k.b5 = { s =    5.25, e =   -3.11 }
k.b6 = { s =   24.32, e =    4.38 }
k.b7 = { s =   44.91, e =    2.86 }
k.b8 = { s =    9.76, e =  -12.05 }
k.c1 = { s =   39.16, e =  -50.77 }
k.c2 = { s =   75.58, e =   -7.42 }
k.c3 = { s =   11.55, e =   30.84 }
k.c4 = { s =   99.30, e =   11.66 }
k.c5 = { s =   97.61, e =   10.47 }
k.c6 = { s =   59.80, e =   15.44 }
k.c7 = { s =   13.97, e =   32.75 }
k.c8 = { s =   10.84, e =    1.06 }
k.d1 = { s =   -0.61, e =  -54.29 }
k.d2 = { s =   21.63, e =  -16.17 }
k.d3 = { s =  130.91, e =   -4.12 }
k.d4 = { s =    4.26, e =   19.03 }
k.d5 = { s =   47.65, e =   21.07 }
k.d6 = { s =   21.74, e =   37.73 }
k.d7 = { s =  -56.72, e =   59.99 }
k.d8 = { s =  -74.09, e =    0.19 }
k.e1 = { s =    7.12, e =   -2.31 }
k.e2 = { s =   85.43, e =   -5.54 }
k.e3 = { s =    0.73, e =   27.25 }
k.e4 = { s =   72.94, e =   11.23 }
k.e5 = { s =   95.16, e =   16.10 }
k.e6 = { s =   35.61, e =   33.41 }
k.e7 = { s =  -24.48, e =   46.10 }
k.e8 = { s =  -15.59, e =  -29.33 }
k.f1 = { s =    1.81, e =    5.77 }
k.f2 = { s =   -3.60, e =   11.36 }
k.f3 = { s =  198.89, e =    8.90 }
k.f4 = { s =  104.50, e =   16.07 }
k.f5 = { s =   97.02, e =   15.34 }
k.f6 = { s =   56.38, e =   25.73 }
k.f7 = { s =    2.37, e =   40.57 }
k.f8 = { s =  -73.80, e =   15.82 }
k.g1 = { s =    6.57, e =  -31.59 }
k.g2 = { s =   -0.78, e =   23.07 }
k.g3 = { s =  131.24, e =   22.12 }
k.g4 = { s =   59.95, e =   22.75 }
k.g5 = { s =   16.33, e =    9.01 }
k.g6 = { s =   41.05, e =    3.14 }
k.g7 = { s =   27.79, e =   15.91 }
k.g8 = { s =    0.89, e =  -14.51 }
k.h1 = { s =    4.81, e = -136.62 }
k.h2 = { s =    3.48, e =  -14.66 }
k.h3 = { s =  -85.61, e =   12.40 }
k.h4 = { s =  -46.52, e =   16.41 }
k.h5 = { s = -114.60, e =  -10.62 }
k.h6 = { s =   -1.53, e =   -6.40 }
k.h7 = { s =   13.54, e =   -9.79 }
k.h8 = { s =   17.26, e =  -78.21 }



# [eval.pmvt]
# b.0 = { s =  0, e = 0 }
# b.1 = { s =  0, e = 0 }
# b.2 = { s =  0, e = 0 }
# b.3 = { s =  0, e = 0 }
# b.4 = { s =  0, e = 0 }
# b.5 = { s =  0, e = 0 }
# b.6 = { s =  0, e = 0 }
# b.7 = { s =  0, e = 0 }
# b.8 = { s =  0, e = 0 }
# b.9 = { s =  0, e = 0 }
# b.10 = { s =  0, e = 0 }
# b.11 = { s =  0, e = 0 }
# b.12 = { s =  0, e = 0 }
# b.13 = { s =  0, e = 0 }
# b.14 = { s =  0, e = 0 }
# b.15 = { s =  0, e = 0 }
# b.16 = { s =  0, e = 0 }
# b.17 = { s =  0, e = 0 }
# b.18 = { s =  0, e = 0 }
# b.19 = { s =  0, e = 0 }

# n.0 = { s =  0, e = 0 }
# n.1 = { s =  0, e = 0 }
# n.2 = { s =  0, e = 0 }
# n.3 = { s =  0, e = 0 }
# n.4 = { s =  0, e = 0 }
# n.5 = { s =  0, e = 0 }
# n.6 = { s =  0, e = 0 }
# n.7 = { s =  0, e = 0 }
# n.8 = { s =  0, e = 0 }
# n.9 = { s =  0, e = 0 }
# n.10 = { s =  0, e = 0 }
# n.11 = { s =  0, e = 0 }
# n.12 = { s =  0, e = 0 }
# n.13 = { s =  0, e = 0 }
# n.14 = { s =  0, e = 0 }
# n.15 = { s =  0, e = 0 }
# n.16 = { s =  0, e = 0 }
# n.17 = { s =  0, e = 0 }
# n.18 = { s =  0, e = 0 }
# n.19 = { s =  0, e = 0 }


# r.0 = { s =  0, e = 0 }
# r.1 = { s =  0, e = 0 }
# r.2 = { s =  0, e = 0 }
# r.3 = { s =  0, e = 0 }
# r.4 = { s =  0, e = 0 }
# r.5 = { s =  0, e = 0 }
# r.6 = { s =  0, e = 0 }
# r.7 = { s =  0, e = 0 }
# r.8 = { s =  0, e = 0 }
# r.9 = { s =  0, e = 0 }
# r.10 = { s =  0, e = 0 }
# r.11 = { s =  0, e = 0 }
# r.12 = { s =  0, e = 0 }
# r.13 = { s =  0, e = 0 }
# r.14 = { s =  0, e = 0 }
# r.15 = { s =  0, e = 0 }
# r.16 = { s =  0, e = 0 }
# r.17 = { s =  0, e = 0 }
# r.18 = { s =  0, e = 0 }
# r.19 = { s =  0, e = 0 }


# q.0 = { s =  0, e = 0 }
# q.1 = { s =  0, e = 0 }
# q.2 = { s =  0, e = 0 }
# q.3 = { s =  0, e = 0 }
# q.4 = { s =  0, e = 0 }
# q.5 = { s =  0, e = 0 }
# q.6 = { s =  0, e = 0 }
# q.7 = { s =  0, e = 0 }
# q.8 = { s =  0, e = 0 }
# q.9 = { s =  0, e = 0 }
# q.10 = { s =  0, e = 0 }
# q.11 = { s =  0, e = 0 }
# q.12 = { s =  0, e = 0 }
# q.13 = { s =  0, e = 0 }
# q.14 = { s =  0, e = 0 }
# q.15 = { s =  0, e = 0 }
# q.16 = { s =  0, e = 0 }
# q.17 = { s =  0, e = 0 }
# q.18 = { s =  0, e = 0 }
# q.19 = { s =  0, e = 0 }



# [eval.attacks.p]
# p = [0.1, 0.2]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.n]
# p = [0.0, 0.3]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.b]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.r]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.q]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.attacks.k]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.p]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.n]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.b]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.r]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.q]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# [eval.defends.k]
# p = [0.0, 0.0]
# n = [0.0, 0.0]
# b = [0.0, 0.0]
# r = [0.0, 0.0]
# q = [0.0, 0.0]
# k = [0.0, 0.0]

# attacks.p.p               = [   0,   0]
# defends.p.p               = [   8.68,   11.21]
# attacks.p.n               = [  10.64,    8.40]
# defends.p.n               = [   8.19,   15.23]
# attacks.p.b               = [  10.28,   12.50]
# defends.p.b               = [   9.47,   10.94]
# attacks.p.r               = [  14.52,   11.58]
# defends.p.r               = [   7.76,    9.05]
# attacks.p.q               = [   8.42,   13.97]
# defends.p.q               = [   8.65,    8.79]
# attacks.p.k               = [   8.52,   12.53]
# defends.p.k               = [   8.98,   10.90]
# attacks.n.p               = [  -5.61,  -10.47]
# defends.n.p               = [  -0.24,   12.19]
# attacks.n.n               = [   8.36,    8.02]
# defends.n.n               = [   4.76,    4.81]
# attacks.n.b               = [  42.29,   42.49]
# defends.n.b               = [   5.67,    1.58]
# attacks.n.r               = [ 105.87,    6.41]
# defends.n.r               = [   8.00,   -3.61]
# attacks.n.q               = [  49.43,   -0.50]
# defends.n.q               = [   9.91,  -18.53]
# attacks.n.k               = [ 187.11,   -9.77]
# defends.n.k               = [   4.88,   -0.39]
# attacks.b.p               = [  -5.84,   -7.82]
# defends.b.p               = [   3.84,    2.11]
# attacks.b.n               = [  26.01,   29.04]
# defends.b.n               = [  11.25,   22.76]
# attacks.b.b               = [  10.61,   10.38]
# defends.b.b               = [  12.94,    7.63]
# attacks.b.r               = [  67.62,   -8.06]
# defends.b.r               = [   1.84,   18.60]
# attacks.b.q               = [  91.87,   11.12]
# defends.b.q               = [  15.07,    1.44]
# attacks.b.k               = [  91.04,   73.46]
# defends.b.k               = [   7.57,    2.30]
# attacks.r.p               = [ -11.63,    0.91]
# defends.r.p               = [  -9.15,    9.73]
# attacks.r.n               = [   3.06,   17.31]
# defends.r.n               = [   8.15,   19.15]
# attacks.r.b               = [  20.48,    5.23]
# defends.r.b               = [  12.57,   17.38]
# attacks.r.r               = [  11.14,   11.35]
# defends.r.r               = [   1.14,   13.71]
# attacks.r.q               = [  99.04,  -17.16]
# defends.r.q               = [  15.97,   24.39]
# attacks.r.k               = [ 268.09,  -25.06]
# defends.r.k               = [  11.53,   -6.96]
# attacks.q.p               = [  -0.74,   -8.18]
# defends.q.p               = [   2.72,   -0.02]
# attacks.q.n               = [   0.22,    2.63]
# defends.q.n               = [   9.58,   10.15]
# attacks.q.b               = [   1.41,   26.16]
# defends.q.b               = [   5.03,   16.53]
# attacks.q.r               = [  11.43,  -34.40]
# defends.q.r               = [   2.11,    8.43]
# attacks.q.q               = [  11.38,   10.63]
# defends.q.q               = [-239.84, -145.59]
# attacks.q.k               = [  97.67,  115.74]
# defends.q.k               = [  -4.67,  -24.98]
# attacks.k.p               = [  12.76,   15.32]
# defends.k.p               = [  12.74,   11.81]
# attacks.k.n               = [  11.42,   11.58]
# defends.k.n               = [  11.65,   11.75]
# attacks.k.b               = [  12.21,    8.58]
# defends.k.b               = [  12.68,    8.58]
# attacks.k.r               = [  11.11,   12.00]
# defends.k.r               = [  11.16,   12.59]
# attacks.k.q               = [  12.02,   11.71]
# defends.k.q               = [   9.32,   14.62]
# attacks.k.k               = [  11.86,   12.76]    
# defends.k.k               = [  10.60,   0

[eval.mb]
enabled = false
filename = ""
consistency_report = true
consistency_adjust = true
internal_stats = false
draws_only = false
min_games = 50
max_pawns = 5
trade_factor = 2
p = { s =  100.00, e =  179.11 }
n = { s =  463.58, e =  507.32 }
b = { s =  482.79, e =  533.69 }
r = { s =  738.36, e =  912.64 }
q = { s = 1452.15, e = 1699.64 }


[eval.mb.balances]
NKk = 0
BKk = 0


[eval.phaser]
enabled = true
method = "SO"
half_way_score = 3200


[aspiration]
enabled = true
min_depth = 4
window = 100
max_window = 1200
multiplier = 4


[qsearch]
enabled = true
only_on_capture = false
promos = false
ignore_see_fails = true
see_cutoff = 1
max_ply = 10
coarse_delta_prune = 1000
switches = 1279

[nmp]
enabled = true
recursive = true
successive = true
margin = -10000
min_depth = 2
depth_reduction_strat = 100
a = 2.7
b = 0.198
c = 0.00017


[razor]
enabled = true
max_depth = 3
min_opponents = 4
pv_nodes = false
margin1 = 94
margin2 = 381
margin3 = 873
move_types_forbidden = 994

[futility]
alpha_enabled = true
beta_enabled = false
prune_remaining = false
avoid_checks = false
avoid_promos = false
promo_margin = false
max_depth = 2
max_depth_captures = 2
margin_qs = 0
margin1 = 100
margin2 = 250
margin3 = 1500
eval_switches = 255
move_types_forbidden = 0

[pvs]
enabled = true
min_depth = 2

[extensions]
max_extend = 1
check_enabled = false
check_max_depth = 2
check_max_phase = 100
check_only_captures = false
check_see = false
check_see_threshold = 0
promo_enabled = false
promo_max_depth = 1
near_promo_enabled = false
near_promo_max_depth = 1
pv_enabled = false

[lmr]
enabled = true
pv_node = true
only_nt_all = false
bad_captures = true
pawns = true
promos = false
killers = false
quiets1 = 20
quiets2 = 35
depth1 = 3
depth2 = 7
depth3 = 13
depth4 = 17
# move_number = 5
re_search = false
alpha_numeric = false
reduce_extensions = false

[mte]
branching_factor = 11.3
perc_of_time_adv = 67
moves_rem = 11
deterministic = false
nodestime = 0

[move_orderer]
enabled = true
prior_pv = true
prior_bm = false
tt_bm = true
mvv_lva = true
see_cutoff = 0
order = ["Start", "Hash", "Initialize", "GoodCaptureUpfrontSorted", "Killer", "Promo", "Quiet", "BadCapture", "End"]
qorder = ["Start", "Initialize", "GoodCapture", "End"]
qorder_evasions = ["Start", "Initialize", "Evasion", "End"]

[repetition]
enabled = true
avoid_tt_on_repeats = false

[tt]
enabled = true
aging = true
use_tt_for_pv = false
allow_truncated_pv = false
buckets = 2
aligned = true
mb = 8
hmvc_horizon = 85
min_ply = 1
min_depth = 1
freshen_on_fetch = false
replacement = "AgeDepthType"

[killers]
enabled = true
clear_every_move = false
use_ply_below = true

[history]
enabled = true
scale = 1
age_factor = 4
malus_factor = 10
board = "PieceTo"
alpha_method = "Squared"
beta_method = "Squared"
duff_method = "Squared"
score_method = "GoodOverGoodAndBad"

[explainer]
enabled = false

[restrictions]
enabled = true

[recognizer]
enabled = true
min_depth = -100
terminal_depth = 2



#end of file
